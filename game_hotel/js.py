import base64
import zlib
import datetime
def decode_token(token):
    # base64解码
    token_decode = base64.b64decode(token.encode())
    # 二进制解压
    token_string = zlib.decompress(token_decode)
    return token_string


if __name__ == '__main__':
    token = [
        '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'
    ]

    for i in range(0, len(token)):
        token1 = decode_token(token[i])
        print(token1)


